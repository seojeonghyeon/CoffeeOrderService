app:
  name: coffeeorderservice
  image: seojeonghyeon0630/coffeeorderservice:0.0.4
  profiles: dev
  port: 8080
  replicas: 3
  customCommand: []
  customArgs: []
  env: []
  resources: {}
  labels:
    layer: backend
    environment: dev
    version: 0.0.4
    release: blue

podAnnotations:
  version: "0.0.1"
  build: "Gradle Kotlin"
  environment: "dev"
  monitoring_enabled: "false"
  monitoring_tool: "none"
  log_config: "info"
  deployment_pipeline: "develop"

podLabels: {}
podImagePullPolicy: Always
podVolumeMounts:
  enabled: true
  name: logfile-data
  mountPath: "/output/$(HOSTNAME)"
podVolumes:
  enabled: true
  name: logfile-data
  persistentVolumeClaimName: logstorage-pvc
  storage: 10Gi
podPersistentVolume:
  name: logstorage-pv
  pdName: logstorage
  storageClassName: standard

probes:
  readiness:
    httpGet:
      path: /actuator/health
      port: 8080
      initialDelaySeconds: 5
      periodSeconds: 5
  liveness:
    httpGet:
      path: /actuator/health
      port: 8080
      initialDelaySeconds: 3
      periodSeconds: 3

service:
  enabled: true
  port: 8080

rbac:
  enabled: false
  roleBinding:
    autoCreate: true
    additionalRoles: []
    additionalClusterRoles: []
  clusterRoleBinding:
    clusterRoles: []

applicationYamlConfig: {}
  # name: configmap
# value: |

applicationYamlSecret: {}
  # name: secret
# value: |

ingress:
  enabled: true
  className: nginx
  host: ""
  path: "/"
  pathType: Prefix
  annotations:
    kubernetes.io/ingress.class: "gce"

postgres:
  masterSlaveMode:
    enabled: false
  standAloneMode:
    enabled: true

  master:
    name: postgres-master
    appName: postgres
    image: postgres:15.2-alpine
    replicas: 1
    username: api_user
    password: '00000000'
    labels:
      app: postgres
      layer: persistence
      role: master
    env:
      - name: POSTGRES_DB
        value: coffeeorderdb
      - name: POSTGRES_USER
        value: api_user
      - name: POSTGRES_PASSWORD
        value: '00000000'
    ports:
      protocol: TCP
      containerPort: 5432
    configMap:
      name: postgres-master-config
    data:
      volumes:
        name: postgres-master-storage
        storage: 1Gi
        mountPath: /var/lib/postgresql/data
      hostPath: /postgres/data

  slave:
    name: postgres-slave
    appName: postgres
    image: postgres:15.2-alpine
    replicas: 2
    username: api_user
    labels:
      app: postgres
      layer: persistence
      role: slave
    env:
      - name: POSTGRES_DB
        value: coffeeorderdb
      - name: POSTGRES_USER
        value: api_user
      - name: POSTGRES_PASSWORD
        value: '00000000'
    ports:
      protocol: TCP
      containerPort: 5432
    configMap:
      name: postgres-slave-config
    data:
      volumes:
        name: postgres-slave-storage
        storage: 10Gi
        mountPath: /var/lib/postgresql/data
      hostPath: /postgres/data

  standAlone:
    name: postgres-standalone
    appName: postgres
    image: postgres:15.2-alpine
    replicas: 1
    username: api_user
    labels:
      app: postgres
      layer: persistence
      role: standalone
    env:
      - name: POSTGRES_DB
        value: coffeeorderdb
      - name: POSTGRES_USER
        value: api_user
      - name: POSTGRES_PASSWORD
        value: '00000000'
    ports:
      protocol: TCP
      containerPort: 5432
    data:
      volumes:
        name: postgres-storage
        storage: 10Gi
        mountPath: /var/lib/postgresql/data
      hostPath: /postgres/data
